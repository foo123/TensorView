"use strict";

const TensorView = require('../src/TensorView.js');

const t = TensorView([1,2,3,4,5,6], {shape:[2,3]}).slice([null,{start:1,stop:2}]);
const T = t.transpose();
const r = TensorView([[1,2,3],[4,5,6]], {ndarray:[2,3],shape:[3,2]});
const R = r.transpose();
const R2 = r.reshape([2,3]).slice([null,{start:1,stop:2}]);
console.log(t.toNDArray());
console.log(t.toArray());
console.log(t.shape());
console.log(T.toNDArray());
console.log(T.toArray());
console.log(T.shape());
console.log(r.toNDArray());
console.log(r.toArray());
console.log(r.shape());
console.log(R.toNDArray());
console.log(R.toArray());
console.log(R.shape());
console.log(R2.toNDArray());
console.log(R2.toArray());
console.log(R2.shape());
for (let [di, i, index] of t) console.log([di, i, index, t.indices(index)]);
for (let [di, i, index] of T) console.log([di, i, index, T.indices(index)]);
//return;

const add = (a, b) => a + b;
const mul = (a, b) => a * b;
const data = [1,2,3,4,5,6,7,8,9,10];
const data1 = [1,2,3,4,5,6];
const data2 = [7,8,9,10,11,12];

const view1 = TensorView(data, {shape:[2,5]});
const view2 = TensorView(data, {shape:[5,2]});
const view2C = TensorView([[1,2,3,4,5],[6,7,8,9,10]], {shape:[5,2],ndarray:[2,5]});
const view2T = view2.transpose();
const view3 = TensorView(data, {shape:[5,2],slice:[{start:1,stop:2},null]});
const view3T = view3.transpose();
const view3R = TensorView(data, {shape:[5,2],slice:[{start:2,stop:1,step:-1},null]});
const view3TR = view3R.transpose();
const view4 = TensorView(data, {shape:[5,2],slice:[{start:4,stop:0,step:-2},null]});
const view5 = view4.slice([{start:2,stop:0,step:-2},null]);
const viewB = TensorView([1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10], {shape:[5,2,10]});
const view12 = TensorView(data1, {shape:[2,3]}).concat(TensorView(data2, {shape:[2,3]}), 0);
const view12S = view12.slice([{start:2,stop:0,step:-2},{start:0,stop:2,step:2}]);
const view12T = view12S.transpose();
const sum = view1.op(add, view1);

console.log(view1.toString());
console.log(view1.toNDArray());
console.log(view1.toArray());
console.log('---');
console.log(sum.toString());
console.log(sum.toNDArray());
console.log(sum.toArray());
console.log('---');
console.log(view2.toString());
console.log(view2.toNDArray());
console.log(view2.toArray());
console.log('---');
console.log(view2C.toString());
console.log(view2C.toNDArray());
console.log(view2C.toArray());
console.log('---');
console.log(view2T.toString());
console.log(view2T.toNDArray());
console.log(view2T.toArray());
console.log('---');
console.log(view3.toString());
console.log(view3.toNDArray());
console.log(view3.toArray());
console.log('---');
console.log(view3T.toString());
console.log(view3T.toNDArray());
console.log(view3T.toArray());
console.log('---');
console.log(view3R.toString());
console.log(view3R.toNDArray());
console.log(view3R.toArray());
console.log('---');
console.log(view3TR.toString());
console.log(view3TR.toNDArray());
console.log(view3TR.toArray());
console.log('---');
console.log(view12.toString());
console.log(view12.toNDArray());
console.log(view12.toArray());
console.log('---');
console.log(view12S.toString());
console.log(view12S.toNDArray());
console.log(view12S.toArray());
console.log('---');
console.log(view12T.toString());
console.log(view12T.toNDArray());
console.log(view12T.toArray());
console.log('---');
/*console.log(view4.toString());
console.log(view4.toNDArray());
console.log(view4.toArray());
console.log(view4.size());
console.log('---');
console.log(view5.toString());
console.log(view5.toNDArray());
console.log(view5.toArray());
console.log(view5.size());
console.log('---');
console.log(viewB.toString());
console.log(viewB.toString(4));
console.log('---');*/
